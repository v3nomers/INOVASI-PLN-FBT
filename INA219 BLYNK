/*************************************************************
  Program Troubleshooting BERTAHAP - Cek 1 masalah dulu
*************************************************************/

#define BLYNK_TEMPLATE_ID "TMPL6N3B7OSwG"
#define BLYNK_TEMPLATE_NAME "Quickstart Template"
#define BLYNK_AUTH_TOKEN "NCwhA6fHE-PTCiJ_6wEo66ijbjEjSdme"

#define BLYNK_PRINT Serial
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <Wire.h>
#include <Adafruit_INA219.h>

char ssid[] = "STARLINK-RENJAR (2,4 GHz)";
char pass[] = "abatasaja";

Adafruit_INA219 ina219;
BlynkTimer timer;

bool ina219Connected = false;
int currentStep = 0; // 0=I2C, 1=INA219, 2=Readings, 3=Blynk

void setup() {
  Serial.begin(115200);
  Serial.println("\nüîß TROUBLESHOOTING BERTAHAP");
  Serial.println("============================");
  Serial.println("Tekan RESET untuk test ulang");
  Serial.println();
  
  // Mulai step pertama
  delay(2000);
  runNextStep();
}

void loop() {
  if (currentStep >= 3) { // Kalau sudah sampai step Blynk
    Blynk.run();
    timer.run();
  }
}

void runNextStep() {
  currentStep++;
  
  switch(currentStep) {
    case 1:
      step1_testI2C();
      break;
    case 2:
      step2_testINA219();
      break;
    case 3:
      step3_testReadings();
      break;
    case 4:
      step4_connectBlynk();
      break;
  }
}

// üî¥ STEP 1: TEST I2C COMMUNICATION
void step1_testI2C() {
  Serial.println("1. TEST I2C COMMUNICATION");
  Serial.println("   ----------------------");
  
  Serial.println("   Initializing I2C (D2=SDA, D1=SCL)...");
  Wire.begin(D2, D1);
  delay(1000);
  
  Serial.println("   Scanning I2C bus...");
  byte error, address;
  int devices = 0;
  
  for(address = 1; address < 127; address++) {
    Wire.beginTransmission(address);
    error = Wire.endTransmission();
    
    if (error == 0) {
      Serial.print("   ‚úÖ Device found: 0x");
      if (address < 16) Serial.print("0");
      Serial.println(address, HEX);
      devices++;
    }
  }
  
  if (devices == 0) {
    Serial.println("   ‚ùå NO I2C DEVICES FOUND!");
    Serial.println();
    Serial.println("   üõ†Ô∏è  SOLUSI:");
    Serial.println("   - Periksa kabel SDA/SCL");
    Serial.println("   - Pastikan INA219 dapat 3.3V");
    Serial.println("   - Cek koneksi GND");
    Serial.println("   - Ganti kabel jumper");
    Serial.println();
    Serial.println("   üî¥ BERHENTI: Perbaiki I2C dulu!");
    while(1) { delay(1000); } // STOP di sini
  } else {
    Serial.println("   ‚úÖ I2C COMMUNICATION OK");
    Serial.println();
    
    // Lanjut ke step berikutnya setelah 3 detik
    Serial.println("   ‚è≥ Lanjut ke step 2 dalam 3 detik...");
    delay(3000);
    runNextStep();
  }
}

// üî¥ STEP 2: TEST INA219 DETECTION
void step2_testINA219() {
  Serial.println("2. TEST INA219 DETECTION");
  Serial.println("   ---------------------");
  
  Serial.print("   Initializing INA219...");
  bool success = ina219.begin();
  
  if (success) {
    Serial.println("‚úÖ SUCCESS");
    ina219Connected = true;
    ina219.setCalibration_32V_2A();
    Serial.println("   ‚úÖ INA219 FOUND & CONFIGURED");
    Serial.println();
    
    // Lanjut ke step berikutnya
    Serial.println("   ‚è≥ Lanjut ke step 3 dalam 3 detik...");
    delay(3000);
    runNextStep();
    
  } else {
    Serial.println("‚ùå FAILED");
    Serial.println();
    Serial.println("   üõ†Ô∏è  SOLUSI:");
    Serial.println("   - INA219 tidak terdeteksi di address 0x40");
    Serial.println("   - Module INA219 mungkin rusak");
    Serial.println("   - Coba ganti module INA219");
    Serial.println("   - Cek power 3.3V ke INA219");
    Serial.println();
    Serial.println("   üî¥ BERHENTI: Perbaiki INA219 dulu!");
    while(1) { delay(1000); } // STOP di sini
  }
}

// üî¥ STEP 3: TEST SENSOR READINGS
void step3_testReadings() {
  Serial.println("3. TEST SENSOR READINGS");
  Serial.println("   --------------------");
  
  Serial.println("   Reading sensor data...");
  
  float voltage = ina219.getBusVoltage_V();
  float current = ina219.getCurrent_mA();
  float power = ina219.getPower_mW();
  float shunt = ina219.getShuntVoltage_mV();
  
  Serial.printf("   Bus Voltage: %.2f V\n", voltage);
  Serial.printf("   Shunt Voltage: %.2f mV\n", shunt);
  Serial.printf("   Current: %.1f mA\n", current);
  Serial.printf("   Power: %.0f mW\n", power);
  
  if (voltage > 0.1) {
    Serial.println("   ‚úÖ SENSOR READINGS OK");
    Serial.println();
    
    // Lanjut ke step berikutnya
    Serial.println("   ‚è≥ Lanjut ke step 4 dalam 3 detik...");
    delay(3000);
    runNextStep();
    
  } else {
    Serial.println("   ‚ùå SENSOR READINGS = 0");
    Serial.println();
    Serial.println("   üõ†Ô∏è  SOLUSI:");
    Serial.println("   - Periksa koneksi baterai ke VIN+ dan VIN-");
    Serial.println("   - Pastikan ground baterai terhubung ke GND");
    Serial.println("   - Cek polaritas baterai [+]‚ÜíVIN+, [-]‚ÜíVIN-");
    Serial.println("   - Baterai mungkin soak/kosong");
    Serial.println();
    Serial.println("   üî¥ BERHENTI: Perbaiki koneksi baterai dulu!");
    while(1) { delay(1000); } // STOP di sini
  }
}

// üî¥ STEP 4: CONNECT TO BLYNK
void step4_connectBlynk() {
  Serial.println("4. CONNECT TO BLYNK");
  Serial.println("   ----------------");
  
  Serial.print("   Connecting to Blynk...");
  Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass);
  
  int timeout = 0;
  while (!Blynk.connected() && timeout < 20) {
    Serial.print(".");
    delay(500);
    timeout++;
  }
  
  if (Blynk.connected()) {
    Serial.println("‚úÖ CONNECTED");
    Serial.println();
    Serial.println("üéâ SEMUA TEST BERHASIL!");
    Serial.println("=====================");
    Serial.println("Sistem siap monitoring...");
    
    // Setup timer untuk kirim data
    timer.setInterval(2000L, sendDataToBlynk);
    
  } else {
    Serial.println("‚ùå FAILED");
    Serial.println();
    Serial.println("   üõ†Ô∏è  SOLUSI:");
    Serial.println("   - Periksa WiFi credentials");
    Serial.println("   - Cek koneksi internet");
    Serial.println("   - Pastikan Blynk Auth Token benar");
    Serial.println("   - Cek firewall/blocking");
    Serial.println();
    Serial.println("   ‚ö†Ô∏è  LANJUT TANPA BLYNK - Kirim data lokal saja");
    
    // Tetap lanjut tanpa Blynk
    timer.setInterval(2000L, sendDataLocal);
  }
}

void sendDataToBlynk() {
  float voltage = ina219.getBusVoltage_V();
  float current = ina219.getCurrent_mA();
  float power = ina219.getPower_mW();
  
  Blynk.virtualWrite(V0, voltage);
  Blynk.virtualWrite(V1, current);
  Blynk.virtualWrite(V2, power);
  Blynk.virtualWrite(V7, "SYSTEM OK");
  
  Serial.printf("üîã V: %.2fV | ‚ö° I: %.1fmA | üí° P: %.0fmW\n", voltage, current, power);
}

void sendDataLocal() {
  float voltage = ina219.getBusVoltage_V();
  float current = ina219.getCurrent_mA();
  float power = ina219.getPower_mW();
  
  Serial.printf("üîã V: %.2fV | ‚ö° I: %.1fmA | üí° P: %.0fmW\n", voltage, current, power);
}
